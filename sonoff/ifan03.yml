substitutions:
  name: "buro-fan"
  friendly_name: "BÃ¼ro Ventilator"
  comment: "Sonoff Ifan03 Ventilator (ESP01 1M)"
  on_boot_light: ALWAYS_ON # or ALWAYS_OFF
  spare_button_light_entity: "light.buro"

esphome:
  name: $name
  comment: $comment

esp8266:
  board: esp01_1m

api:
  encryption:
    key: !secret api_encryption

ota:
  - platform: esphome
    password: !secret ota_password

wifi:
  ssid: !secret wifi_ssid
  password: !secret wifi_password
  ap:
    ssid: "$name Fallback Hotspot"
    password: !secret wifi_password

captive_portal:

logger:
  level: ERROR

sensor:
  - platform: wifi_signal
    name: "$name WiFi Signal"
    update_interval: 60s
    entity_category: diagnostic

button:
  - platform: restart
    name: "$name restart"
    entity_category: diagnostic
  
  - platform: template
    name: "$name Buzzer"
    id: buzzer
    on_press:
      - switch.turn_on: buzzer_switch
      - delay: 50ms
      - switch.turn_off: buzzer_switch

text_sensor:
  - platform: uptime
    name: "$name Uptime"
    entity_category: diagnostic

  - platform: wifi_info
    ip_address:
      id: wifi_ip
      name: "$name IP Address"
      entity_category: diagnostic

output:
  - platform: gpio
    id: light_relay
    pin: GPIO9
    inverted: true

switch:
  - platform: gpio
    internal: True
    id: buzzer_switch
    name: "Buzzer"
    pin:
      number: GPIO10
      inverted: true

  - platform: gpio
    internal: true
    pin: GPIO14
    id: fan_relay1
    restore_mode: ALWAYS_OFF

  - platform: gpio
    internal: true
    pin: GPIO12
    id: fan_relay2
    restore_mode: ALWAYS_OFF

  - platform: gpio
    internal: true
    pin: GPIO15
    id: fan_relay3
    restore_mode: ALWAYS_OFF

light:
  - platform: binary
    name: "$friendly_name"
    output: light_relay
    id: ifan03_light
    restore_mode: $on_boot_light

fan:
  - platform: template
    id: ifan03_fan
    name: "$friendly_name"
    speed_count: 3
    restore_mode: NO_RESTORE # important
    on_turn_on:
      - switch.turn_on: fan_relay1
      - switch.turn_off: fan_relay2
      - switch.turn_off: fan_relay3
    on_turn_off:
      - switch.turn_off: fan_relay1
      - switch.turn_off: fan_relay2
      - switch.turn_off: fan_relay3
    on_speed_set:
      lambda: |-
        if (id(ifan03_fan).speed == 1) {
          id(fan_relay1).turn_on();
          id(fan_relay2).turn_off();
          id(fan_relay3).turn_off();
        } else if (id(ifan03_fan).speed == 2) {
          id(fan_relay1).turn_on();
          id(fan_relay2).turn_on();
          id(fan_relay3).turn_off();
        } else if (id(ifan03_fan).speed == 3) {
          id(fan_relay1).turn_off();
          id(fan_relay2).turn_off();
          id(fan_relay3).turn_on();
        }

remote_receiver:
  pin: GPIO3
  dump: raw

binary_sensor:
  # remote button row 3 button 1
  - platform: remote_receiver
    name: "$name Fan Off"
    id: remote_0
    raw:
      code: [-207, 104, -103, 104, -104, 103, -104, 207, -104, 103, -104, 104, -103, 104, -104, 103, -104, 105, -102, 104, -725, 104, -311, 103, -518, 104, -933, 103, -104, 104, -725, 104, -932, 104, -207, 207, -519]
    on_release:
      then:
        - fan.turn_off: ifan03_fan
        - button.press: buzzer
    internal: true        
  # remote button row 3 button 2    
  - platform: remote_receiver
    name: "$name Fan Low"
    id: remote_1
    raw:
      code: [-207, 104, -104, 103, -104, 104, -103, 207, -104, 104, -103, 104, -104, 103, -104, 104, -103, 104, -104, 103, -726, 103, -312, 103, -518, 104, -933, 103, -104, 104, -725, 104, -103, 104, -726, 103, -104, 311, -518]
    on_release:
      then:
        - fan.turn_on:
            id: ifan03_fan
            speed: 1
        - button.press: buzzer
    internal: true    
  # remote button row 2 button 2 
  - platform: remote_receiver
    name: "$name Fan Medium"
    id: remote_2
    raw:
      code: [-208, 103, -104, 104, -103, 104, -103, 208, -103, 104, -104, 103, -104, 104, -103, 104, -104, 103, -104, 103, -726, 104, -310, 104, -518, 104, -933, 103, -104, 104, -725, 104, -207, 104, -622, 103, -416, 102, -415]
    on_release:
      then:
        - fan.turn_on:
            id: ifan03_fan
            speed: 2
        - button.press: buzzer
    internal: true    
  # remote button row 2 button 1    
  - platform: remote_receiver
    name: "$name Fan High"
    id: remote_3
    raw:
      code: [-207, 104, -104, 103, -104, 104, -103, 208, -103, 104, -104, 103, -104, 104, -103, 104, -104, 103, -104, 103, -726, 104, -311, 104, -518, 103, -934, 103, -103, 104, -726, 103, -104, 207, -622, 104, -103, 104, -207, 104, -415]
    on_release:
      then:
        - fan.turn_on:
            id: ifan03_fan
            speed: 3
        - button.press: buzzer
    internal: true    
  # remote button row 1 button 1    
  - platform: remote_receiver
    name: "$name Fan Light"
    id: remote_light
    raw:
      code: [-207, 104, -103, 104, -104, 103, -104, 207, -104, 103, -104, 104, -103, 104, -103, 104, -104, 103, -104, 104, -725, 104, -311, 103, -518, 104, -933, 103, -104, 103, -726, 103, -311, 104, -518, 104, -207, 104, -103, 104, -414]
    on_release:
      then:
        - light.toggle: ifan03_light
        - button.press: buzzer
    internal: true      
  # remote button row 1 button 2 - used to call a home assistant service
  - platform: remote_receiver
    name: "$name Spare Button"
    id: remote_spare_button
    raw:
      code: [-207, 104, -103, 104, -104, 103, -104, 207, -104, 103, -104, 103, -104, 104, -103, 104, -103, 104, -104, 107, -721, 105, -206, 207, -518, 105, -931, 104, -104, 103, -725, 104, -104, 103, -725, 104, -104, 103, -207, 104, -414]
    on_release:
      then:
        - homeassistant.service:
            service: light.toggle
            data:
              entity_id: $spare_button_light_entity
        - button.press: buzzer
    internal: true
